{"name":"Sky4","tagline":"ngx_http_accounting_module的解析","body":"`` 对NGX_HTTP_ACCOUNTTING_MODULE的分析：\r\n``\r\n\r\n# 内容： \r\n\r\n## 一：配置说明\r\n\r\n## 二：openlog函数解析\r\n\r\n## 三：syslog函数解析\r\n\r\n## 四：细节注意点\r\n\r\n## 五：日志各字段含义\r\n\r\n## 六：执行流程\r\n\r\n\r\n一.配置说明： \r\n====\r\n```nginx\r\n    http{\r\n        http_accounting  on;   # turn on accounting function\r\n        ...\r\n        server {\r\n            server_name example.com;\r\n            http_accounting_id  accounting_id_str;   # set accounting_id based on server\r\n            ...\r\n            location / { \r\n                http_accounting_id  accounting_id_str;    # set accounting_id based on location\r\n                ...\r\n            }\r\n        }\r\n    } \r\n```\r\n        \r\n\r\n上面的配置就启用了ngx_http_accountting的功能．那么该模块的功能是啥恩?该模块可以作为不同server级别location级别的流量统计，　　　\r\n启动nginx后，日志会记录到系统日志，/var/log/message，类似:      \r\n\r\n```\r\nMay 1 17:32:25 localhost NgxAccounting: pid:195|from:1368783525|to:13683555|accounting_id:test|requests:30|bytes_out:882066|200:30\r\nMay 1 17:53:45 localhost NgxAccounting: pid:196|from:1368784635|to:13684665|accounting_id:test|requests:1|bytes_out:4087|200:1\r\n\r\n```   \r\n\r\n当然也可以配置独立的log来进行存储：　　　\r\n```\r\necho \"syslog.*                /var/log/syslog\" >>  /etc/syslog.conf　　　　　　　　　　　\r\n\r\nservice syslog restart\r\n```\r\n\r\n二.openlog函数的解析：\r\n====\r\n```\r\nvoid openlog(const char*ident ,int option,int facility)    \r\n参数一：ident：表示的字符串会加载到每一行的日志信息当中    \r\n参数二：表示一些设置选项    \r\n参数说明:    \r\nLOG_CONS    如果将信息发送给syslogd守护进程时发生错误，直接将相关信息输出到终端    \r\nLOG_NDELAY\t立即打开与系统日志的连接（通常情况下，只有在产生第一条日志信息的情况下才会打开与日志系统的连接）     \r\nLOG_NOWAIT\t在记录日志信息时，不等待可能的子进程的创建    \r\nLOG_ODELAY\t类似于LOG_NDELAY参数，与系统日志的连接只有在syslog函数调用时才会创建    \r\n\r\n参数说明    \r\nLOG_PERROR\t在将信息写入日志的同时，将信息发送到标准错误输出（POSIX.1-2001不支持该参数）   \r\nLOG_PID\t每条日志信息中都包括进程号   \r\n\r\n\r\n参数三：facility表示rsyslog.conf中前面所配置的，意思表示日志信息 的来源  类型    \r\nfacility参数\tsyslog.conf中对应的facility取值   \r\nLOG_KERN\tkern    \r\nLOG_USER\tuser   \r\nLOG_MAIL\tmail    \r\nLOG_DAEMON\tdaemon   \r\nLOG_AUTH\tauth    \r\nLOG_SYSLOG\tsyslog   \r\nLOG_LPR\tlpr   \r\nLOG_NEWS\tnews   \r\nLOG_UUCP\tuucp   \r\nLOG_CRON\tcron   \r\nLOG_AUTHPRIV\tauthpriv    \r\nLOG_FTP\tftp   \r\nLOG_LOCAL0～LOG_LOCAL7\tlocal0～local7    \r\n```\r\n\r\n三.其次是：syslog函数 \r\n=====\r\n```\r\n原型：     \r\nvoid syslog(int priority,const char*format,…)    \r\n参数一：priority表示消息的级别    \r\npriority参数\tsyslog.conf中对应的level取值    \r\nLOG_EMERG\temerg 表示最紧急的信息   \r\nLOG_ALERT\talert 紧急信息    \r\nLOG_CRIT\tcrit 重要信息      \r\nLOG_ERR\terr 错误信息    \r\nLOG_WARNING\twarning    \r\nLOG_NOTICE\tnotice 普通重要信息    \r\nLOG_INFO\tinfo 通知性消息     \r\nLOG_DEBUG    \r\n\r\nLOG_NONO\tdebug    \r\n\r\nnono  没有重要性 不记录任何日志信息    \r\n参数二：表示消息的格式   之后是所要发送的信息      \r\n```\r\n\r\n\r\n四.特别注意点:   \r\n=====\r\n```\r\n\r\n在syslog的配置文件中:    \r\n   在进行配置什么来源以及什么级别的日志  写入什么文件当中,  在文件路径的前面加\"-\"减号的时候:其含义是先将其写入缓存,然后在写入磁盘文件.\r\n这样可以提高性能,但是有些不安全  由于有可能某个时候机器宕机了,则机器中缓存的数据就丢失了.\r\n``` \r\n\r\n五.输出日志的各字段的含义：\r\n=====\r\n```\r\n\r\nThe output contains a list of k/v for the accounting metrics, in the sequence of:          \r\nkey     meaning     \r\npid \tpid of nginx worker process   \r\nfrom / to \tmetric was collected between these timestamps    \r\naccounting_id \tidentify for the accounting unit, you name it with http_accounting_id directive       \r\nrequests \tcount of total requests processed    \r\nbytes_in \ttotal bytes receiverd by the server     \r\nbytes_out \ttotal bytes send out by the server    \r\nlatency_ms \ta sum of $request_time, in millisecond        \r\nupstream_latency_ms \ta sum of $upstream_response_time, in millisecond               \r\n200 / 302 / 400 / 404 / 500 ... \tcount of requests which response is with http code 200/302/400/404/500, etc     \r\n```\r\n六.内部执行过程：　\r\n====\r\n```      \r\n其中WORK_PROCESS_INTERVAL 默认值是30    \r\n\r\nngx_http_accounting_work_process_init     \r\n          |   \r\n\t     \\|/     \r\nngx_add_timer(write_out_ev,WORK_PROCESS_INTERVAL*(rand()%200))  最开始最多等6秒钟    \r\n          |    \r\n\t     \\|/    \r\nwrite_out_ev有一个handler,其指向work_process_alarm_handler       \r\n          |     \r\n\t     \\|/    \r\nngx_http_accounting_hash_iterate   ngx_add_timer(write_out_ev,WORK_PROCESS_INTERVAL*1000)  后续每隔30秒输出一次    \r\n          |      \r\n\t     \\|/   \r\n上面函数主要就是调用openlog  syslog其相应函数进行写syslog.       \r\n\r\n```\r\n\r\n\r\n## 有问题反馈\r\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\r\n\r\n* 邮件(1031379296#qq.com, 把#换成@)\r\n* QQ: 1031379296\r\n* weibo: [@王发康](http://weibo.com/u/2786211992/home)\r\n\r\n\r\n## 感激\r\n\r\n### chunshengsterATgmail.com\r\n\r\n\r\n## 关于作者\r\n\r\n### Linux\\nginx\\golang\\c\\c++爱好者\r\n### 欢迎一起交流  一起学习# \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}